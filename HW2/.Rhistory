for (i in haart.df$init.date) {
if (is.na(haart.df$last.visit[j]) {
View(haart.df)
haart.df["follow up time"] <- NA
j <- 1
for (i in haart.df$init.date) {
if (is.na(haart.df$last.visit[j])) {
haart.df[j,14] <- haart.df$date.death[j]
} else if(is.na(haart.df$date.death[j])) {
haart.df[j,14] <- haart.df$last.visit[j]
} else {
haart.df[j,14] <- min(haart.df$last.visit[j],haart.df$date.death[j])
}
j <- j+1
}
View(haart.df)
haart.df["follow up time"] <- NA
j <- 1
for (i in haart.df$init.date) {
if (is.na(haart.df$last.visit[j])) {
haart.df[j,14] <- haart.df$date.death[j]
} else if(is.na(haart.df$date.death[j])) {
haart.df[j,14] <- haart.df$last.visit[j]
} else {
haart.df[j,14] <- min(haart.df$last.visit[j],haart.df$date.death[j])-haart.df$init.date[j]
}
j <- j+1
}
View(haart.df)
haart.df["follow up time"] <- NA
j <- 1
for (i in haart.df$init.date) {
if (is.na(haart.df$last.visit[j])) {
haart.df[j,14] <- haart.df$date.death[j]-haart.df$init.date[j]
} else if(is.na(haart.df$date.death[j])) {
haart.df[j,14] <- haart.df$last.visit[j]-haart.df$init.date[j]
} else {
haart.df[j,14] <- min(haart.df$last.visit[j],haart.df$date.death[j])-haart.df$init.date[j]
}
j <- j+1
}
View(haart.df)
haart.df["follow up time"] <- NA
j <- 1
for (i in haart.df$init.date) {
if (is.na(haart.df$last.visit[j])) {
haart.df[j,14] <- haart.df$date.death[j]-i
} else if(is.na(haart.df$date.death[j])) {
haart.df[j,14] <- haart.df$last.visit[j]-i
} else {
haart.df[j,14] <- min(haart.df$last.visit[j],haart.df$date.death[j])-i]
}
j <- j+1
}
View(haart.df)
haart.df["follow up time"] <- NA
j <- 1
for (i in haart.df$init.date) {
if (is.na(haart.df$last.visit[j])) {
haart.df[j,14] <- haart.df$date.death[j]-i
} else if(is.na(haart.df$date.death[j])) {
haart.df[j,14] <- haart.df$last.visit[j]-i
} else {
haart.df[j,14] <- min(haart.df$last.visit[j],haart.df$date.death[j])-i
}
j <- j+1
}
sum<-1
View(haart.df)
sum<-1
for (i in haart.df[,14]){
sum<- sum+ is.na(i)
}
sum
print(haart.df[2,])
haart.df["follow up time"] <- NA
j <- 1
for (i in haart.df$init.date) {
if (is.na(haart.df$last.visit[j])) {
haart.df[j,14] <- haart.df$date.death[j]-i
} else if(is.na(haart.df$date.death[j])) {
haart.df[j,14] <- haart.df$last.visit[j]-i
} else {
haart.df[j,14] <- min(haart.df$last.visit[j],haart.df$date.death[j])-i
}
if (haart.df[j,14]>365){
print(haart.df[j,])
}
j <- j+1
}
haart.df <- read.csv("haart.csv")
haart.df$init.date <- as.Date(haart.df$init.date,format="%m/%d/%Y")
haart.df$last.visit <- as.Date(haart.df$last.visit,format="%m/%d/%Y")
haart.df$date.death <- as.Date(haart.df$date.death,format="%m/%d/%Y")
haart.df["death within a year"] <- +((haart.df$date.death-haart.df$init.date)<365)
haart.df["follow up time"] <- NA
j <- 1
for (i in haart.df$init.date) {
if (is.na(haart.df$last.visit[j])) {
haart.df[j,14] <- haart.df$date.death[j]-i
} else if(is.na(haart.df$date.death[j])) {
haart.df[j,14] <- haart.df$last.visit[j]-i
} else {
haart.df[j,14] <- min(haart.df$last.visit[j],haart.df$date.death[j])-i
}
"  if (haart.df[j,14]>365){
print(haart.df[j,])
}"
j <- j+1
}
View(haart.df)
haart.df["Unknown after 1 year"] <- +(haart.df[,14]>365)
View(haart.df)
haart.df["Unknown after 1 year"] <- +(haart.df[,14]<=365)
View(haart.df)
df <- haart.df$init.reg
df
strsplit(df,",")
strsplit(df[1],",")
df[1]
class df[1]
class (df[1])
strsplit(as.Charactor(df),",")
strsplit(as.charactor(df),",")
strsplit(as.character(df),",")
dd <- strsplit(as.character(df),",")
View(haart.df)
cbind(haart.df, strsplit(as.character(haart.df$init.reg),","))
View(haart.df)
strsplit(as.character(haart.df$init.reg),",")
do.call(cbind(haart.df, strsplit(as.character(haart.df$init.reg),",")))
do.call(rbind(haart.df, strsplit(as.character(haart.df$init.reg),",")))
rbind(haart.df, strsplit(as.character(haart.df$init.reg),","))
cbind(haart.df, strsplit(as.character(haart.df$init.reg),","))
do.call(cbind(haart.df, strsplit(haart.df$init.reg,",")))
do.call(rbind(haart.df, strsplit(haart.df$init.reg,",")))
a<-strsplit(haart.df$init.reg,",")
a<-strsplit(as.character(haart.df$init.reg),",")
b<-do.call(rbind,a)
rbind(haart.df,b)
b
b[1,1]
cbind(haart.df,b)
View(haart.df)
haart.df<-cbind(haart.df,do.call(rbind,strsplit(as.character(haart.df$init.reg),",")))
View(haart.df)
haart.df <- read.csv("haart.csv")
haart.df<-cbind(haart.df,do.call(rbind,strsplit(as.character(haart.df$init.reg),",")))
haart.df <- read.csv("haart.csv")
haart.df<-cbind(haart.df,do.call(rbind,strsplit(as.character(haart.df$init.reg),",")))
View(haart.df)
haart.df<-cbind(haart.df,do.call(rbind,strsplit(as.character(haart.df$init.reg),","),1))
View(haart.df)
strsplit(as.character(haart.df$init.reg)
)
strsplit(as.character(haart.df$init.reg),",")
do.call(rbind,strsplit(as.character(haart.df$init.reg),","))
cbind(haart.df,rbind(strsplit(as.character(haart.df$init.reg),",")))
ffee
haart.df["Unknown after 1 year"] <- +(haart.df[,14]<=365)
strsplit(as.character(haart.df$init.reg),",")
rbind(strsplit(as.character(haart.df$init.reg),","))
d<-rbind(strsplit(as.character(haart.df$init.reg),","))
do.call(rbind,do.call)
do.call(rbind,strsplit(as.character(haart.df$init.reg),","))
do.call(rbind,strsplit(as.character(haart.df$init.reg),","),diparse.level =1)
View(haart.df)
haart.df <- read.csv("haart.csv")
View(haart.df)
haart.df<-cbind(haart.df,rbind(strsplit(as.character(haart.df$init.reg),",")))
View(haart.df)
View(haart.df)
haart.df<-cbind(haart.df,rbind(strsplit(as.character(haart.df$init.reg),",")))
View(haart.df)
haart.df <- read.csv("haart.csv")
do.call(rbind.data.frame, strsplit(as.character(haart.df$init.reg), ","))
haart.df <- read.csv("haart.csv")
as.data.frame(do.call(rbind, strsplit(as.character(haart.df$init.reg), ",")))
haart.df <- read.csv("haart.csv")
strsplit(as.character(haart.df$init.reg), ",")
haart.df <- read.csv("haart.csv")
cbind(haart.df,rbind(strsplit(as.character(haart.df$init.reg),",")))
haart.df <- read.csv("haart.csv")
strsplit(as.character(haart.df$init.reg), ",")
ddd<-strsplit(as.character(haart.df$init.reg), ",")
ddd[1,1]
ddd[1]
haart.df <- read.csv("haart.csv")
as.data.frame(do.call(rbind, strsplit(as.character(haart.df$init.reg), ",")))
do.call(rbind, strsplit(as.character(haart.df$init.reg), ","))
hello.df<- read.csv("haart2.csv")
View(hello.df)
haart.df <- read.csv("haart.csv")
a <- as.data.frame(do.call(rbind, strsplit(as.character(haart.df$init.reg), ",")))
view(a)
View(a)
a <- as.data.frame(do.call(rbind, strsplit(as.character(haart.df$init.reg), ","),deparse.level = 1))
rbind(1:4, c = 2, "a++" = 10, dd, deparse.level = 0)
dd <- 10
rbind(1:4, c = 2, "a++" = 10, dd, deparse.level = 0)
rbind(1:4, c = 2, "a++" = 10, dd, deparse.level = 1)
rbind(1:4, c = 2, "a++" = 10, dd, deparse.level = 2)
haart.df$init.date <- as.Date(haart.df$init.date,format="%m/%d/%Y")
haart.df$last.visit <- as.Date(haart.df$last.visit,format="%m/%d/%Y")
haart.df$date.death <- as.Date(haart.df$date.death,format="%m/%d/%Y")
haart.df <- read.csv("haart.csv")
haart.df$init.date <- as.Date(haart.df$init.date,format="%m/%d/%Y")
haart.df$last.visit <- as.Date(haart.df$last.visit,format="%m/%d/%Y")
haart.df$date.death <- as.Date(haart.df$date.death,format="%m/%d/%Y")
haart.df["death within a year"] <- +((haart.df$date.death-haart.df$init.date)<365)
haart.df["follow up time"] <- NA
j <- 1
for (i in haart.df$init.date) {
if (is.na(haart.df$last.visit[j])) {
haart.df[j,14] <- haart.df$date.death[j]-i
} else if(is.na(haart.df$date.death[j])) {
haart.df[j,14] <- haart.df$last.visit[j]-i
} else {
haart.df[j,14] <- min(haart.df$last.visit[j],haart.df$date.death[j])-i
}
"  if (haart.df[j,14]>365){
print(haart.df[j,])
}"
j <- j+1
}
View(haart.df)
haart.df["Unknown after 1 year"] <- +(haart.df[,14]<=365)
View(haart.df)
temp<-strsplit(as.character(haart.df$init.reg),",")
nmax<-max(sapply(temp,length))
temp2 <- do.call(rbind, lapply(temp,`[`,seq_len(nmax)))
haart.df <- cbind(haart.df, temp2)
View(haart.df)
addition.df[, setdiff(names(haart.df),names(addition.df))] <- NA
addition.df <- read.csv("haart2.csv")
addition.df[, setdiff(names(haart.df),names(addition.df))] <- NA
View(addition.df)
ana.df <- rbind(ana.df, add.df)
haart.df.df <- rbind(haart.df, addition.df)
View(haart.df.df)
ffvalues <- function(path, file='outfile.csv', nTeams=12, cap=200, posReq=c(qb=1, rb=2, wr=3, te=1, k=1),
points=c(fg=4, xpt=1, pass_yds=1/25, pass_tds=4, pass_ints=-2,
rush_yds=1/10, rush_tds=6, fumbles=-2, rec_yds=1/20, rec_tds=6)) {
k <- read.csv('proj_k14.csv', header=TRUE, stringsAsFactors=FALSE)
qb <- read.csv('proj_qb14.csv', header=TRUE, stringsAsFactors=FALSE)
rb <- read.csv('proj_rb14.csv', header=TRUE, stringsAsFactors=FALSE)
te <- read.csv('proj_te14.csv', header=TRUE, stringsAsFactors=FALSE)
wr <- read.csv('proj_wr14.csv', header=TRUE, stringsAsFactors=FALSE)
cols <- unique(c(names(k), names(qb), names(rb), names(te), names(wr)))
k[,'pos'] <- 'k'
qb[,'pos'] <- 'qb'
rb[,'pos'] <- 'rb'
te[,'pos'] <- 'te'
wr[,'pos'] <- 'wr'
cols <- c(cols, 'pos')
k[,setdiff(cols, names(k))] <- 0
qb[,setdiff(cols, names(qb))] <- 0
rb[,setdiff(cols, names(rb))] <- 0
te[,setdiff(cols, names(te))] <- 0
wr[,setdiff(cols, names(wr))] <- 0
cols <- c(cols, 'pos')
x <- rbind(k[,cols], qb[,cols], rb[,cols], te[,cols], wr[,cols])
names(x) <- gsub('[.]', '', names(x))
x[,'p_fg'] <- x[,'fg']*points["fg"]
x[,'p_xpt'] <- x[,'xpt']*points["xpt"]
x[,'p_pass_yds'] <- x[,'pass_yds']*points["pass_yds"]
x[,'p_pass_tds'] <- x[,'pass_tds']*points["pass_tds"]
x[,'p_pass_ints'] <- x[,'pass_ints']*points["pass_ints"]
x[,'p_rush_yds'] <- x[,'rush_yds']*points["rush_yds"]
x[,'p_rush_tds'] <- x[,'rush_tds']*points["rush_tds"]
x[,'p_fumbles'] <- x[,'fumbles']*points["fumbles"]
x[,'p_rec_yds'] <- x[,'rec_yds']*points["rec_yds"]
x[,'p_rec_tds'] <- x[,'rec_tds']*points["rec_tds"]
x[,'points'] <- rowSums(x[,grep("^p_", names(x))])
x2 <- x[order(x[,'points'], decreasing=TRUE),]
k.ix <- which(x2[,'pos']=='k')
qb.ix <- which(x2[,'pos']=='qb')
rb.ix <- which(x2[,'pos']=='rb')
te.ix <- which(x2[,'pos']=='te')
wr.ix <- which(x2[,'pos']=='wr')
if (posReq["k"]>0){
x2[k.ix, 'marg'] <- x2[k.ix,'points'] - x2[k.ix[posReq["k"]*nTeams],'points']
}
if (posReq["qb"]>0){
x2[qb.ix, 'marg'] <- x2[qb.ix,'points'] - x2[qb.ix[posReq["qb"]*nTeams],'points']
}
if (posReq["rb"]>0){
x2[rb.ix, 'marg'] <- x2[rb.ix,'points'] - x2[rb.ix[posReq["rb"]*nTeams],'points']
}
if (posReq["te"]>0){
x2[te.ix, 'marg'] <- x2[te.ix,'points'] - x2[te.ix[posReq["te"]*nTeams],'points']
}
if (posReq["wr"]){
x2[wr.ix, 'marg'] <- x2[wr.ix,'points'] - x2[wr.ix[posReq["wr"]*nTeams],'points']
}
x3 <- x2[x2[,'marg'] >= 0 & !is.na(x2[,'marg']),]
x3 <- x3[order(x3[,'marg'], decreasing=TRUE),]
rownames(x3) <- NULL
x3[,'value'] <- x3[,'marg']*(nTeams*cap-nrow(x3))/sum(x3[,'marg']) + 1
x4 <- x3[,c('PlayerName','pos','points','value')]
}
x1 <- ffvalues('.')
haart.df <- read.csv("haart.csv")
```
1.
```{r}
haart.df$init.date <- as.Date(haart.df$init.date,format="%m/%d/%Y")
haart.df$last.visit <- as.Date(haart.df$last.visit,format="%m/%d/%Y")
haart.df$date.death <- as.Date(haart.df$date.death,format="%m/%d/%Y")
```
2.
```{r}
haart.df["death within a year"] <- +((haart.df$date.death-haart.df$init.date)<365)
```
3.
```{r}
haart.df["follow up time"] <- NA
j <- 1
for (i in haart.df$init.date) {
if (is.na(haart.df$last.visit[j])) {
haart.df[j,14] <- haart.df$date.death[j]-i
} else if(is.na(haart.df$date.death[j])) {
haart.df[j,14] <- haart.df$last.visit[j]-i
} else {
haart.df[j,14] <- min(haart.df$last.visit[j],haart.df$date.death[j])-i
}
"  if (haart.df[j,14]>365){
print(haart.df[j,])
}"
j <- j+1
}
```
4.
```{r}
haart.df["Unknown after 1 year"] <- +(haart.df[,14]<=365)
```
5.
```{r}
temp<-strsplit(as.character(haart.df$init.reg),",")
nmax<-max(sapply(temp,length))
temp2 <- do.call(rbind, lapply(temp,`[`,seq_len(nmax)))
haart.df <- cbind(haart.df, temp2)
```
6.
```{r}
addition.df <- read.csv("haart2.csv")
addition.df[, setdiff(names(haart.df),names(addition.df))] <- NA
addition.df$init.date <- as.Date(addition.df$init.date,format="%m/%d/%Y")
addition.df$last.visit <- as.Date(addition.df$last.visit,format="%m/%d/%Y")
addition.df$date.death <- as.Date(addition.df$date.death,format="%m/%d/%Y")
haart.df.df <- rbind(haart.df, addition.df)
View(haart.df.df)
View(addition.df)
haart.df$init.date <- as.Date(haart.df$init.date,format="%m/%d/%Y")
haart.df$last.visit <- as.Date(haart.df$last.visit,format="%m/%d/%Y")
haart.df$date.death <- as.Date(haart.df$date.death,format="%m/%d/%Y")
haart.df["death within a year"] <- +((haart.df$date.death-haart.df$init.date)<365)
j <- 1
for (i in haart.df$init.date) {
if (is.na(haart.df$last.visit[j])) {
haart.df[j,14] <- haart.df$date.death[j]-i
} else if(is.na(haart.df$date.death[j])) {
haart.df[j,14] <- haart.df$last.visit[j]-i
} else {
haart.df[j,14] <- min(haart.df$last.visit[j],haart.df$date.death[j])-i
}
"  if (haart.df[j,14]>365){
print(haart.df[j,])
}"
j <- j+1
}
haart.df["Unknown after 1 year"] <- +(haart.df[,14]<=365)
View(haart.df.df)
View(addition.df)
View(addition.df)
objs <- mget(ls("package:base"), inherits = TRUE)
funs <- Filter(is.function, objs)
args(funs)
ffvalues <- function(path, file='outfile.csv', nTeams=12, cap=200, posReq=c(qb=1, rb=2, wr=3, te=1, k=1),
points=c(fg=4, xpt=1, pass_yds=1/25, pass_tds=4, pass_ints=-2,
rush_yds=1/10, rush_tds=6, fumbles=-2, rec_yds=1/20, rec_tds=6)) {
k <- read.csv('proj_k14.csv', header=TRUE, stringsAsFactors=FALSE)
qb <- read.csv('proj_qb14.csv', header=TRUE, stringsAsFactors=FALSE)
rb <- read.csv('proj_rb14.csv', header=TRUE, stringsAsFactors=FALSE)
te <- read.csv('proj_te14.csv', header=TRUE, stringsAsFactors=FALSE)
wr <- read.csv('proj_wr14.csv', header=TRUE, stringsAsFactors=FALSE)
cols <- unique(c(names(k), names(qb), names(rb), names(te), names(wr)))
k[,'pos'] <- 'k'
qb[,'pos'] <- 'qb'
rb[,'pos'] <- 'rb'
te[,'pos'] <- 'te'
wr[,'pos'] <- 'wr'
cols <- c(cols, 'pos')
k[,setdiff(cols, names(k))] <- 0
qb[,setdiff(cols, names(qb))] <- 0
rb[,setdiff(cols, names(rb))] <- 0
te[,setdiff(cols, names(te))] <- 0
wr[,setdiff(cols, names(wr))] <- 0
cols <- c(cols, 'pos')
x <- rbind(k[,cols], qb[,cols], rb[,cols], te[,cols], wr[,cols])
names(x) <- gsub('[.]', '', names(x))
x[,'p_fg'] <- x[,'fg']*points["fg"]
x[,'p_xpt'] <- x[,'xpt']*points["xpt"]
x[,'p_pass_yds'] <- x[,'pass_yds']*points["pass_yds"]
x[,'p_pass_tds'] <- x[,'pass_tds']*points["pass_tds"]
x[,'p_pass_ints'] <- x[,'pass_ints']*points["pass_ints"]
x[,'p_rush_yds'] <- x[,'rush_yds']*points["rush_yds"]
x[,'p_rush_tds'] <- x[,'rush_tds']*points["rush_tds"]
x[,'p_fumbles'] <- x[,'fumbles']*points["fumbles"]
x[,'p_rec_yds'] <- x[,'rec_yds']*points["rec_yds"]
x[,'p_rec_tds'] <- x[,'rec_tds']*points["rec_tds"]
x[,'points'] <- rowSums(x[,grep("^p_", names(x))])
x2 <- x[order(x[,'points'], decreasing=TRUE),]
k.ix <- which(x2[,'pos']=='k')
qb.ix <- which(x2[,'pos']=='qb')
rb.ix <- which(x2[,'pos']=='rb')
te.ix <- which(x2[,'pos']=='te')
wr.ix <- which(x2[,'pos']=='wr')
if (posReq["k"]>0){
x2[k.ix, 'marg'] <- x2[k.ix,'points'] - x2[k.ix[posReq["k"]*nTeams],'points']
}
if (posReq["qb"]>0){
x2[qb.ix, 'marg'] <- x2[qb.ix,'points'] - x2[qb.ix[posReq["qb"]*nTeams],'points']
}
if (posReq["rb"]>0){
x2[rb.ix, 'marg'] <- x2[rb.ix,'points'] - x2[rb.ix[posReq["rb"]*nTeams],'points']
}
if (posReq["te"]>0){
x2[te.ix, 'marg'] <- x2[te.ix,'points'] - x2[te.ix[posReq["te"]*nTeams],'points']
}
if (posReq["wr"]){
x2[wr.ix, 'marg'] <- x2[wr.ix,'points'] - x2[wr.ix[posReq["wr"]*nTeams],'points']
}
x3 <- x2[x2[,'marg'] >= 0 & !is.na(x2[,'marg']),]
x3 <- x3[order(x3[,'marg'], decreasing=TRUE),]
rownames(x3) <- NULL
x3[,'value'] <- x3[,'marg']*(nTeams*cap-nrow(x3))/sum(x3[,'marg']) + 1
x4 <- x3[,c('PlayerName','pos','points','value')]
write.csv(x4,file = file)
return(x4)
}
args(ffvalues)
a <- args(ffvalues)
a
class a
class(a)
args(sum)
args(zapsmall)
as.character(args(zapsmall))
args(zapsmall)[1]
class(args(zapsmall))
args(c)
formals(zapsmall)
a <- formals(zapsmall)
class(a)
a[1]
length(a)
class(funs)
funs[1]
formals(funs[1])
a <- funs[1]
formals(a)
funs[[1]]
formals(funs[[1]])
class(funs[[1]])
a<-funs[[1]]
formals(a)
formals(funs[[1167]])
length(formals(a))
length(funs)
indx <- integer(length(funs))
indx <- integer(length(funs))
i <- 1
while(i < length(funs)){
indx[i] <- length(funs[[i]])
}
indx <- integer(length(funs))
i <- 1
while(i < length(funs)){
indx[i] <- length(formals(funs[[i]]))
}
i <- 1
while(i < 2){
indx[i] <- length(formals(funs[[i]]))
}
i <- 1
while(i < 2){
indx[i] <- length(formals(funs[[i]]))
i <- i+1
}
i <- 1
while(i < length(funs)){
indx[i] <- length(formals(funs[[i]]))
i <- i+1
}
max(indx)
funs[[22]]
fun[22]
fun[22]
funs[22]
which(max(indx))
which((indx==max(indx)))
funs[908]
which(indx==max(indx))
funs[which(indx==max(indx))]
sum(indx==0)
indx
sum(indx==0)
indx==0
indx[which(indx==0)]
indx[which(indx==-1)]
indx[which(indx==0)]
